openapi: 3.0.1
info:
  title: rs-tree API
  description: Advanced link tree application with user and group management written in Rust.
  version: 0.1.0
  license:
    name: MIT
    url: https://raw.githubusercontent.com/jonathan-schild/rs-tree/main/LICENSE
servers:
  - url: http://localhost/api
    description: docker-compose.yml
tags:
  - name: tree
    description: ''
  - name: tree-permissions
    description: ''
  - name: user
    description: ''
paths:
  /user/create:
    post:
      tags:
        - user
      summary: Create a new user.
      description: Create a new user.
      parameters:
        - name: id
          in: cookie
          description: session id
          required: true
          schema:
            type: string
      requestBody:
        description: user
        content: 
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: User created.
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Log in required.
        '403':
          description: User already exists.
  /user/login:
    post:
      tags:
        - user
      summary: Log in.
      description: Log in.
      requestBody:
        description: user
        content: 
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login sucesfull.
        '401':
          description: User does not exist or wrong password.
  /create:
    post:
      tags:
        - tree
      summary: Create a new empty link tree entry and return a short link.
      description: Create a new empty link tree entry and return a short link `short`.
      responses:
        '200':
          description: New empty link tree entry `short` created.
          content:
            application/json:
              schema:
                type: string
                format: short
              examples:
                short:
                  value: tuD120dA
        '401':
          description: Log in required.
  /create/{short}:
    post:
      tags:
        - tree
      summary: Create a new empty link tree entry with given short link.
      description: Create a new empty link tree entry with given short link `short`.
      parameters:
        - $ref: '#/components/parameters/short'
      responses:
        '200':
          description: New empty link tree entry `short` created.
          content:
            application/json:
              schema:
                type: string
                format: short
              examples:
                short:
                  value: tuD120dA
        '401':
          description: Log in required.
        '403':
          description: Link tree entry `short` already exists.
  /update/{short}:
    post:
      tags:
        - tree
      summary: Update link tree entry.
      description: Update link tree entry `short`.
      parameters:
        - $ref: '#/components/parameters/short'
      responses:
        '200':
          description: Link tree entry `short` updated.
        '401':
          description: Log in required.
        '403':
          description: No permission to update `short`.
  /resolve/{short}:
    get:
      tags:
        - tree
      summary: Get link tree entry.
      description: Get link tree entry `short`.
      parameters:
        - $ref: '#/components/parameters/short'
      responses:
        '200':
          description: New empty link tree entry `short` created.
          content:
            application/json:
              schema:
                type: string
                format: short
              examples:
                short:
                  value: tuD120dA
        '401':
          description: Log in required.
        '403':
          description: No permission to get `short`.
  /delete/{short}:
    delete:
      tags:
        - tree
      summary: Delete link tree entry.
      description: Delete link tree entry `short`.
      parameters:
        - $ref: '#/components/parameters/short'
      responses:
        '200':
          description: Link tree entry `short` deleted.
        '401':
          description: Log in required.
        '403':
          description: No permission to delete `short`.
components:
  parameters:
    short:
      name: short
      in: path
      description: ''
      required: true
      schema:
        type: string
